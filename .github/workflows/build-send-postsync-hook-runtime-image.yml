---
name: Build, send and deploy postsync hook image.

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'bin/cliain/**'
      - 'docker-runtime-hook/**'
      - .github/workflows/build-send-postsync-hook-runtime-image.yml

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Save cliain binary as an artifact
    runs-on: self-hosted
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: GIT | Get branch info & current commit sha.
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.6.1'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binary
        run: |
          pushd bin/cliain/
          cargo build --release
          popd

      - name: Build runtime-update-hook
        run: |
          docker build -f docker-runtime-hook/Dockerfile . \
          -t runtime-update-hook:${{ steps.vars.outputs.sha_short }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Public Amazon ECR
        id: login-public-ecr
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Push postsync hook current Image to Public ECR
        env:
          CURRENT_IMAGE: runtime-update-hook:${{ steps.vars.outputs.sha_short }}
          ECR_PUSH_IMAGE:
            public.ecr.aws/p6e8q1z1/runtime-update-hook:${{ steps.vars.outputs.sha_short }}
          ECR_LATEST: public.ecr.aws/p6e8q1z1/runtime-update-hook:latest
        run: |
          docker tag ${{ env.CURRENT_IMAGE }} ${{ env.ECR_PUSH_IMAGE }}
          docker push ${{ env.ECR_PUSH_IMAGE }}

          docker tag ${{ env.ECR_PUSH_IMAGE }} ${{ env.ECR_LATEST }}
          docker push ${{ env.ECR_LATEST }}

      - name: GIT | Checkout aleph-apps repo
        uses: actions/checkout@master
        with:
          repository: Cardinal-Cryptography/aleph-apps
          token: ${{ secrets.CI_GH_TOKEN }}
          path: "aleph-apps"

      - name: Init kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.8.6"

      - name: Update postsync hook docker image
        env:
          RELEASE_IMAGE:
            public.ecr.aws/p6e8q1z1/runtime-update-hook:${{ steps.vars.outputs.sha_short }}
          REGIONS_AWS: 'eu-central-1'
        run: |
            # Deploy new image version for postsync hook
            cd aleph-apps/aleph-node-validators/overlays/devnet/eu-central-1
            kustomize edit set image "send-runtime-hook-image-placeholder=${{ env.RELEASE_IMAGE }}"

      - name: GIT | Commit changes to aleph-apps repository.
        uses: EndBug/add-and-commit@v5.1.0
        with:
          author_name: AlephZero Automation
          author_email: alephzero@10clouds.com
          message: "Updating postsync hook image tag to: ${{ steps.vars.outputs.sha_short }}"
          add: "*.yaml"
          cwd: "aleph-apps"
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GH_TOKEN }}
